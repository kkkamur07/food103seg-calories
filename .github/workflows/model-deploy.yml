name: Deploy Food Segmentation Model

on:
  push:
    branches: [ main ]
    paths:
      - 'saved/models.dvc'  # Only trigger on DVC file changes

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: europe-west10
  SERVICE_NAME: food-segmentation-service
  REPOSITORY: food-segmentation-repo
  GCP_BUCKET: food-segmentation-models

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

    - name: Download model from GCS bucket
      run: |
        echo "üìÅ Downloading model from GCS bucket..."
        gsutil cp gs://${{ env.GCP_BUCKET }}/models/model.pth saved/models/model.pth
        ls -la saved/models/
        echo "‚úÖ Model ready for Docker build"

    - name: Build Docker image
      run: |
        docker build \
          -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/food-segmentation-app:${{ github.sha }} \
          -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/food-segmentation-app:latest \
          .

    - name: Push Docker image
      run: |
        docker push --all-tags ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/food-segmentation-app

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/food-segmentation-app:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --port 8080 \
          --memory 4Gi \
          --cpu 2 \
          --timeout 300 \
          --allow-unauthenticated \
          --set-env-vars MODEL_VERSION=${{ github.sha }},BUILD_SHA=${{ github.sha }}

    - name: Verify deployment
      run: |
        echo "‚è≥ Waiting for deployment to stabilize..."
        sleep 30

        SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
          --region=${{ env.REGION }} \
          --format="value(status.url)")

        echo "üöÄ Application deployed at: $SERVICE_URL"

        # Test health endpoint
        curl -f $SERVICE_URL/healthz || exit 1
        echo "‚úÖ Deployment successful and healthy!"
