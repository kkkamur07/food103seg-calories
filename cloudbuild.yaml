# cloudbuild.yaml - Build and push Docker images to Artifact Registry
steps:
  # Step 1: Download model from GCS bucket
  - name: 'gcr.io/cloud-builders/gsutil'
    args: [
      'cp',
      'gs://${_GCP_BUCKET}/models/model.pth',
      'saved/models/model.pth'
    ]

  # Step 2: Verify model download
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üìÅ Verifying model download..."
        ls -la saved/models/
        echo "‚úÖ Model ready for Docker build"

  # Step 3: Build backend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'Dockerfile.backend',
      '-t', '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/segmentation-backend:${SHORT_SHA}',
      '-t', '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/segmentation-backend:latest',
      '.'
    ]

  # Step 4: Build frontend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'Dockerfile.frontend',
      '-t', '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/segmentation-frontend:${SHORT_SHA}',
      '-t', '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/segmentation-frontend:latest',
      '.'
    ]

  # Step 5: Push backend image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '--all-tags',
      '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/segmentation-backend'
    ]

  # Step 6: Push frontend image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '--all-tags',
      '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/segmentation-frontend'
    ]

  # Step 7: Confirm successful build and push
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üê≥ Docker images built and pushed successfully!"
        echo "Backend: ${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/segmentation-backend:${SHORT_SHA}"
        echo "Frontend: ${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/segmentation-frontend:${SHORT_SHA}"
        echo "‚úÖ Images ready for deployment"

# Configuration variables
substitutions:
  _LOCATION: 'us-central1'
  _REPOSITORY: 'food-segmentation-repo'
  _GCP_BUCKET: 'food-segmentation-models'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'N2_Standard_2'
  timeout: '1200s'  # 20 minutes
